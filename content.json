{"posts":[{"title":"Test","text":"개요 첫번째 글을 작성 소스코드import pandas as pd data=pd.read_csv('data.csv') data.head()","link":"/2025/02/08/My-new-post/"},{"title":"R에서 여러 패키지 이용해서 벤다이어그램 그리기","text":"출처: https://bio-kcs.tistory.com/entry/R-Venn-diagram%EC%9D%84-%EA%B7%B8%EB%A6%AC%EB%8A%94-%ED%8C%A8%ED%82%A4%EC%A7%80-5%EA%B0%9C-%EB%B9%84%EA%B5%90 R에서 벤다이어그램 그리기코드12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485################################################### Load data##################################################clusters,loo_resultsload(file = &quot;G:/내 드라이브/Desktop/대학원생활/24-2학기/GBM/Robjects/LOOV_final_clusters.RData&quot;) #result_list,diff_exp_of_type,signature_of_type,load(file='G:/내 드라이브/Desktop/대학원생활/24-2학기/GBM/Robjects/Signature_identification_250210.RData') #final_signature_list, final_signatureload(file=&quot;G:/내 드라이브/Desktop/대학원생활/24-2학기/GBM/Robjects/signature_results.RData&quot;)################################################### Q1. Signature list venndiagram#################################################sig_lst=lapply(final_signature_list,function(df) rownames(df))#install.packages(&quot;gplots&quot;)#install.packages(&quot;VennDiagram&quot;)#if (!require(devtools)) install.packages(&quot;devtools&quot;) #devtools::install_github(&quot;gaospecial/ggVennDiagram&quot;)#install.packages(&quot;UpSetR&quot;)library(ggVennDiagram)library(UpSetR)library(VennDiagram)library(gplots)#gplot #가장 기본적인 plotvenn1 &lt;- gplots::venn(sig_lst)#VennDiagramVennDiagram::venn.diagram( x = sig_lst, category.names = c(&quot;Group1&quot;, &quot;Group2&quot;, &quot;Group3&quot;, &quot;Group4&quot;, &quot;Group5&quot;), filename = './Figure/Bulk/4.LOO_result_analysis/venn_diagram.png', main = &quot;&quot;, output=F, col=c(&quot;#440154ff&quot;, '#21908dff', '#fde725ff', &quot;#E7298A&quot;,'skyblue'), height = 9, width = 11, resolution = 500, units = &quot;in&quot;, imagetype = &quot;png&quot;, fill = c(&quot;#440154ff&quot;, '#21908dff', '#fde725ff', &quot;#E7298A&quot;,'skyblue'), cex = 2, fontfamily = &quot;sans&quot;, cat.cex = 1.5, cat.default.pos = &quot;outer&quot;, cat.fontfamily = &quot;sans&quot;, cat.col = c(&quot;#440154ff&quot;, '#21908dff', '#fde725ff', &quot;#E7298A&quot;,'skyblue'))#ggVennDiagramp &lt;- ggVennDiagram(sig_lst, label_alpha = 0, category.names = c(&quot;Group1&quot;, &quot;Group2&quot;, &quot;Group3&quot;, &quot;Group4&quot;, &quot;Group5&quot;))+ scale_fill_gradient(low = &quot;#F4FAFE&quot;, high = &quot;#4981BF&quot;)pggsave(&quot;./Figure/Bulk/4.LOO_result_analysis/venn3.png&quot;, width = 7, height = 7, dpi = 300, device = png, type = &quot;cairo&quot;, bg = &quot;transparent&quot;)#만든 plot을 ppt로 옮겨서 편집 가능 #install.packages('officer')#install.packages('rvg')library(officer)library(rvg)# 빈 pptx만들기 read_pptx() %&gt;% print(target = &quot;./Figure/Bulk/example.pptx&quot;)read_pptx( &quot;./Figure/Bulk/example.pptx&quot;)# 편집 가능한 이미지로 변환editable_graph &lt;- rvg::dml(ggobj = p)# 그림 저장 read_pptx( &quot;./Figure/Bulk/example.pptx&quot;) %&gt;% add_slide(&quot;Title Slide&quot;,&quot;Office Theme&quot;) %&gt;% ph_with(editable_graph, location = ph_location(left=0, top=0,width = 3, height = 3, bg=&quot;transparent&quot;)) %&gt;% print(target = &quot;./Figure/Bulk/example.pptx&quot;) 많은 비교군이 존재할 때코드1234567891011121314151617181920212223242526272829303132333435363738394041library(readxl)##Wang sig 와 venndiagramw=read_excel(&quot;G:/내 드라이브/Desktop/대학원생활/24-2학기/GBM/Wang2017.xlsx&quot;,sheet='Glioma intrinsic genes')w=w[3:nrow(w),]w=as.data.frame(w)w2=w[!is.na(w[,3]),]w2=w2[w2[,3]=='YES',]unique(w2[,4]) #Proneural, Mesenchymal, Classicalsig_lst_wang=list()subtypes=c(&quot;Proneural&quot;,&quot;Mesenchymal&quot;,'Classical')for(subtype in subtypes){ sig_lst_wang[[paste0(subtype,'_Wang')]]=w2[which(w2[,4]==subtype),2]}sig_lst2=c(sig_lst,sig_lst_wang)sig_lst2[c(1:5)]=lapply(sig_lst2[c(1:5)],function(c) ginfo2[match(c,ginfo2$gene_id),'gene_name'])##vendiagramlibrary(UpSetR)gene=unique(unlist(sig_lst2)) #595cmat=matrix(NA,nrow=8,ncol=length(gene))rownames(cmat)=names(sig_lst2)colnames(cmat)=genefor(i in 1:length(sig_lst2)){ cmat[i,]=as.numeric(gene %in% sig_lst2[[i]])}p &lt;- upset(data.frame(t(cmat)), nintersects = 15,point.size = 5, sets=colnames(data.frame(t(cmat))), sets.bar.color = &quot;#56B4E9&quot;, order.by = &quot;freq&quot;,text.scale = 2, empty.intersections = &quot;on&quot;)p","link":"/2025/02/11/R_venndiagram/"}],"tags":[{"name":"python","slug":"python","link":"/tags/python/"},{"name":"R","slug":"R","link":"/tags/R/"}],"categories":[{"name":"Python","slug":"Python","link":"/categories/Python/"},{"name":"ML&#x2F;DL","slug":"Python/ML-DL","link":"/categories/Python/ML-DL/"},{"name":"R","slug":"R","link":"/categories/R/"},{"name":"GBM projects","slug":"R/GBM-projects","link":"/categories/R/GBM-projects/"}],"pages":[]}